Node JS is a JavaScript asynchronous I/O framework run on the V8 engine, with most of the source code being in either C++ or JavaScript. It's primary modus operandi is to use an event loop with asynchronous calls to various external API's to mimic the behavior of asynchronous execution. It can be used for both frontend and backend development. It's best utilized in situations where there are many HTTP requests that are not computationally intensive. The bread and butter of the Node JS event loop is to use numerous callback functions to emulate the seamless behavior of asynchronous execution. Because Node JS is an asynchronous framework, it exhibits non-blocking behavior (which means that threads do NOT wait during an I/O operation unless specified). Node also comes with a REPL (Read Eval Print Loop) already accesible in one of its many modules. Modules can be accessed by the .require() function, and these modules also include functionality such as file/directory traversal, streams and buffers, handling client-server relationships (net module), DNS lookup (and others), and grouping I/O operations (domain module). When writing code that interacts with APIs, a good practice is to follow REST (Representational State Transfer) guidelines, whose guidelines dictate scalability and low latency.SYNCHRONOUS WRITE CALL TEST